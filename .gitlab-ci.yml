###############################################################
# Execute pipeline for every merge request and after every
# merge request approved for develop and master
###############################################################
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'develop'

stages:
  - test
  - deploy

#################################################################################
# Code to be reused in test stage jobs, but is not necessary in the pages job
#################################################################################
.variables_template: &variables_definition
  POSTGRES_USER: 'hubble'
  POSTGRES_PASSWORD: 'hubble'
  APT_CACHE_DIR: '$CI_PROJECT_DIR/build-cache/apt'
  PIP_CACHE_DIR: '$CI_PROJECT_DIR/build-cache/pip'
  PIP_FIND_LINKS: 'https://www.djangoplicity.org/repository/packages/'

.before_script_template: &before_script_definition
  - mkdir -pv static media/archives/images media/archives/videos logs tmp import $APT_CACHE_DIR $PIP_CACHE_DIR

########################################
# Test and generate coverage reports
########################################
test:py27-django111:
  variables:
    <<: *variables_definition
  cache:
    key: py27-django111
    paths:
      - build-cache
  services:
    - name: postgres:10.5
      alias: hubble-db
  stage: test
  image: python:2.7-slim-buster
  before_script: *before_script_definition
  script:
    - export PATH=/root/.local/bin:$PATH
    - ln -s /root/.local .local
    - apt-get update -y
    - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y gcc git libldap2-dev libsasl2-dev libssl-dev python-dev uglifyjs
    - python -m pip install --upgrade pip
    - pip install --user -r requirements.txt
    - pip install --user -r test-requirements.txt
    - pip --no-cache-dir install --user -r private-requirements.txt
    - python manage.py collectstatic --noinput
    - coverage run --source='.' manage.py test
    - coverage report
    - coverage html
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: on_success
    paths:
      - htmlcov
    expire_in: 5 days

##############################################
# Upload coverage reports to pages section
##############################################
pages:
  stage: deploy
  dependencies:
    - test:py27-django111
  script:
    # Delete everything in the current public/{BRANCH_SLUG} folder
    # and replace it with code coverage HTML report
    - rm -rf public/${CI_COMMIT_REF_SLUG}/*
    - mkdir -pv public/${CI_COMMIT_REF_SLUG}/
    - cp -r htmlcov/* public/${CI_COMMIT_REF_SLUG}/
  artifacts:
    paths:
      - public/${CI_COMMIT_REF_SLUG}
    expire_in: 1000 yrs
